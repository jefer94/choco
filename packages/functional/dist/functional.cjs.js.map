{"version":3,"file":"functional.cjs.js","sources":["../src/memo.js","../src/capitalizeFirstLetter.js","../src/compose.js","../src/filterObject.js","../src/url.js"],"sourcesContent":["const cache = {}\n\n/**\n * Memoize by key.\n *\n * @param {string} key - Memo key.\n * @param {any} data - Memo data.\n * @example\n * memo('potato', 7) // returns 7\n * memo('potato') // returns 7\n * @returns {any} Data memoize.\n */\nexport function memo(key, data) {\n  if (data) { cache[key] = data }\n  return cache[key]\n}\n","/**\n * Capitalize first letter.\n *\n * @param {string} string - String.\n * @returns {string} String with first letter capitalize.\n */\nexport function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1)\n}\n","/** @module @ironllama/functional */\n\n/**\n * Compose a function and pipe each return.\n *\n * @param  {...any} functions - Functions to be called from left to right.\n * @example\n * const add = (n) => n + n\n * const square = (n) => n * n\n * const cube = (n) => n * n * n\n *\n * compose(cube, square, add)(2) // returns 128\n * @returns {compose~composed} - Composed function.\n */\nexport function compose(...functions) {\n  /**\n   * Composed function.\n   *\n   * @param {any} arg - Argument of function.\n   * @returns {any} Function result.\n   * @example\n   * const add = (n) => n + n\n   * const square = (n) => n * n\n   * const cube = (n) => n * n * n\n   *\n   * compose(cube, square, add)(2) // returns 128\n   */\n  const composed = (arg) => functions.reduce((value, fn) => fn(value), arg)\n  return composed\n}\n","/** @module @ironllama/functional */\n\n/**\n * Filter a object.\n *\n * @param {object} obj - Object.\n * @param {string[]} rules - Array of properties.\n * @example\n * const obj = {\n *   name: 'Pedro',\n *   rol: 'adc'\n * }\n * filterObject(obj, ['rol']) // returns { rol: 'adc' }\n * @returns {object} Object fltered.\n */\nexport function filterObject(obj, rules) {\n  const propertiesInObj = rules.filter((v) => obj[v] !== undefined)\n  return propertiesInObj.reduce((newObj, value) =>\n    ({ ...newObj, [value]: obj[value] }),\n  {})\n}\n","import * as path from 'path'\n\n/**\n * Generate url.\n *\n * @param {string} host - Hostname.\n * @param {string[]} paths - Paths.\n * @example\n * url('potato.io', 'path', 'subpath') // 'potato.io/path/subpath'\n * @returns {string} Url.\n */\nexport function url(host = '', ...paths) {\n  const hostname = host.replace(/\\/$/, '')\n  const urlPath = paths.reduce((acc, value = '') => path.join(acc, value), '/')\n\n  return hostname + urlPath.replace(/\\/$/, '')\n}\n"],"names":["cache","string","charAt","toUpperCase","slice","functions","arg","reduce","value","fn","obj","rules","filter","v","undefined","newObj","key","data","host","paths","replace","acc","path"],"mappings":"4FAAA,MAAMA,EAAQ,iCCMP,SAA+BC,UAC7BA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,oBCOhD,YAAoBC,UAaPC,GAAQD,EAAUE,OAAO,CAACC,EAAOC,IAAOA,EAAGD,GAAQF,yBCZhE,SAAsBI,EAAKC,UACRA,EAAMC,OAAQC,QAAiBC,IAAXJ,EAAIG,IACzBN,OAAO,CAACQ,EAAQP,SAC/BO,GAASP,GAAQE,EAAIF,KAC7B,kBHPK,SAAcQ,EAAKC,UACpBA,IAAQjB,EAAMgB,GAAOC,GAClBjB,EAAMgB,gBIHR,SAAaE,EAAO,MAAOC,UACfD,EAAKE,QAAQ,MAAO,IACrBD,EAAMZ,OAAO,CAACc,EAAKb,EAAQ,KAAOc,OAAUD,EAAKb,GAAQ,KAE/CY,QAAQ,MAAO"}