{"version":3,"file":"functional.esm.js","sources":["../src/compose.js"],"sourcesContent":["/**\n * Compose a function and pipe each return.\n *\n * @param  {...any} functions Functions to be called from left to right.\n * @example\n * const add = (n) => n + n\n * const square = (n) => n * n\n * const cube = (n) => n * n * n\n *\n * compose(cube, square, add)(2) // returns 128\n * @returns {compose~composed} - Composed function.\n */\nexport function compose(...functions) {\n  /**\n   * Composed function.\n   *\n   * @param {any} arg - Argument of function.\n   * @returns {any} Function result\n   */\n  const composed = (arg) => functions.reduce((value, fn) => fn(value), arg)\n  return composed\n}\n"],"names":["compose","functions","composed","arg","reduce","value","fn"],"mappings":"AAAA;;;;;;;;;;;;AAYO,SAASA,OAAT,GAA+B;AAAA,oCAAXC,SAAW;AAAXA,IAAAA,SAAW;AAAA;;AACpC;;;;;;AAMA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD;AAAA,WAASF,SAAS,CAACG,MAAV,CAAiB,UAACC,KAAD,EAAQC,EAAR;AAAA,aAAeA,EAAE,CAACD,KAAD,CAAjB;AAAA,KAAjB,EAA2CF,GAA3C,CAAT;AAAA,GAAjB;;AACA,SAAOD,QAAP;AACD;;;;"}