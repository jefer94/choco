{"version":3,"file":"algorithm-transpiler.umd.js","sources":["../src/lang/common.js","../src/lang/en.js","../src/lang/es.js","../src/lang/index.js","../src/files.js","../src/variables.js","../src/diff.js","../src/transform.js","../src/toJS.js","../src/vector.js","../src/io.js","../src/index.js"],"sourcesContent":["export const staticTokens = {\n  // algorithm : js\n  '<>': '!==',\n  '<=': '<=',\n  '>=': '>=',\n  '<': '<',\n  '>': '>',\n  '<-': '='\n}","import locale from '@choco/i18n'\nimport { staticTokens } from './common'\n\nconst lang = 'en'\n\nexport default function() {\n  locale.set(lang, 'algorithmWord', 'algoritmo')\n  locale.set(lang, 'begin', 'inicio')\n  locale.set(lang, 'end', 'fin')\n  locale.set(lang, 'forWord', 'para')\n  locale.set(lang, 'toWord', 'hasta')\n  locale.set(lang, 'trueWord', 'verdadero')\n  locale.set(lang, 'falseWord', 'falso')\n\n  locale.set(lang, 'tokens', { ...staticTokens, ...{\n    // algorithm : js\n    o: '||',\n    y: '&&',\n    no: '!'\n  }})\n\n  locale.set(lang, 'variables', [\n    // map\n    'variables',\n    'var'\n  ])\n\n  locale.set(lang, 'transpiler', {\n    // algorithm : js\n    si: 'if',\n    sino: '}\\nelse {',\n    mientras: 'while',\n    repetir: 'do {',\n    hasta: '} while',\n    para: 'for',\n    hacer: 'do'\n  })\n\n  locale.set(lang, 'openBracket', [\n    // map\n    'hacer',\n    'entonces'\n  ])\n\n\n  locale.set(lang, 'closeBracket', [\n    // map\n    'finsi',\n    'fin_si',\n    'finmientras',\n    'fin_mientras',\n    'finpara',\n    'fin_para'\n  ])\n\n  locale.set(lang, 'write', [\n    // map\n    'mostrar',\n    'escribir',\n    'imprimir'\n  ])\n\n  locale.set(lang, 'read', [\n    // map\n    'leer'\n  ])\n\n  locale.set(lang, 'type', {\n    // type : algorithm\n    int: 'entero',\n    double: 'real',\n    string: 'carapter',\n    bool: 'booleano'\n  })\n\n  locale.set(lang, 'typeError', {\n    // type : string in es\n    int: 'ERROR: no es entero',\n    double: 'ERROR: no es flotante',\n    string: 'ERROR: no es una cadena',\n    bool: 'ERROR: no es booleano'\n  })\n\n  locale.set(lang, 'error', {\n    // error name     : string in es\n    stringForNumber: 'ERROR: un numero no puede multiplicar a un carapter',\n    infinity: 'ERROR: dividir entre 0 causa un numero infinito'\n  })\n\n  locale.set(lang, 'code', [\n    'algoritmo facilito',\n    'variables',\n    'numero, i, tabla[10]: entero',\n    'inicio',\n    '  i <- 0',\n    '  mostrar \"Ingrese numero a multiplicar: \"',\n    '  leer numero',\n    '  mientras (i < 10) hacer',\n    '    i <- i + 1',\n    '    tabla[i] <- numero * i',\n    '    mostrar numero, \" * \", i, \" = \", numero * i',\n    '  finmientras',\n    'fin'\n  ].join('\\n'))\n}\n","import locale from '@choco/i18n'\nimport { staticTokens } from './common'\n\nconst lang = 'es'\n\nexport default function() {\n  locale.set(lang, 'algorithmWord', 'algoritmo')\n  locale.set(lang, 'begin', 'inicio')\n  locale.set(lang, 'end', 'fin')\n  locale.set(lang, 'forWord', 'para')\n  locale.set(lang, 'toWord', 'hasta')\n  locale.set(lang, 'trueWord', 'verdadero')\n  locale.set(lang, 'falseWord', 'falso')\n\n  locale.set(lang, 'tokens', { ...staticTokens, ...{\n    // algorithm : js\n    o: '||',\n    y: '&&',\n    no: '!'\n  }})\n\n  locale.set(lang, 'variables', [\n    // map\n    'variables',\n    'var'\n  ])\n\n  locale.set(lang, 'transpiler', {\n    // algorithm : js\n    si: 'if',\n    sino: '}\\nelse {',\n    mientras: 'while',\n    repetir: 'do {',\n    hasta: '} while',\n    para: 'for',\n    hacer: 'do'\n  })\n\n  locale.set(lang, 'openBracket', [\n    // map\n    'hacer',\n    'entonces'\n  ])\n\n\n  locale.set(lang, 'closeBracket', [\n    // map\n    'finsi',\n    'fin_si',\n    'finmientras',\n    'fin_mientras',\n    'finpara',\n    'fin_para'\n  ])\n\n  locale.set(lang, 'write', [\n    // map\n    'mostrar',\n    'escribir',\n    'imprimir'\n  ])\n\n  locale.set(lang, 'read', [\n    // map\n    'leer'\n  ])\n\n  locale.set(lang, 'type', {\n    // type : algorithm\n    int: 'entero',\n    double: 'real',\n    string: 'carapter',\n    bool: 'booleano'\n  })\n\n  locale.set(lang, 'typeError', {\n    // type : string in es\n    int: 'ERROR: no es entero',\n    double: 'ERROR: no es flotante',\n    string: 'ERROR: no es una cadena',\n    bool: 'ERROR: no es booleano'\n  })\n\n  locale.set(lang, 'error', {\n    // error name     : string in es\n    stringForNumber: 'ERROR: un numero no puede multiplicar a un carapter',\n    infinity: 'ERROR: dividir entre 0 causa un numero infinito'\n  })\n\n  locale.set(lang, 'code', [\n    'algoritmo facilito',\n    'variables',\n    'numero, i, tabla[10]: entero',\n    'inicio',\n    '  i <- 0',\n    '  mostrar \"Ingrese numero a multiplicar: \"',\n    '  leer numero',\n    '  mientras (i < 10) hacer',\n    '    i <- i + 1',\n    '    tabla[i] <- numero * i',\n    '    mostrar numero, \" * \", i, \" = \", numero * i',\n    '  finmientras',\n    'fin'\n  ].join('\\n'))\n}\n","import en from './en'\nimport es from './es'\n\nexport function algorithmTranspilerLang() {\n  en()\n  es()\n}\n\n// export default algorithmTranspilerLang\n","import locale from '@choco/i18n'\n\n\n/** @module libs/algorithm/files */\n\n/**\n * @typedef {object} Files\n * @param {string} code - Algorithm lines.\n */\n\n/**\n * Get name of algorithm.\n * @param {string} code - Algorithm lines\n * @returns {Files} Algorithm name and lines but first line\n * return\n */\nexport default function (code) {\n  const { algorithmWord } = locale.all()\n  const [firstLine, ...lines] = code.split('\\n')\n  const [keyword, name, ...restOfWords] = firstLine.split(' ')\n  if (keyword === algorithmWord && name && restOfWords.length === 0) return [name, lines.join('\\n')]\n  throw new Error('name is invalid')\n}\n","import locale from '@choco/i18n'\n\n/** @module @choco/algorithm-transpiler/variables */\n\n/**\n * Transform Algorithm variables in Javascript variables.\n *\n * @param {string} code - Algorithm code.\n * @param {object} store - Store of variables.\n * @example\n * import variables from 'libs/algorithm/variables'\n *\n * const store = {}\n * const code = [\n *   'algorithm easy',\n *   'variables',\n *   '  stuff: string',\n *   'start'.\n *   '  ...'.\n *   'end'\n * ]\n * variables(code, store) // return 'var stuff;\\n'\n * @returns {string} Javascript variables.\n */\nexport default function (code, store) {\n  const literals = ignoreSentences(code)\n  const [firstLine, ...lines] = literals.split('\\n')\n  const [keyword, ...restOfVarLine] = firstLine.split(' ')\n  let result = ''\n  if (isVarsZone(keyword, restOfVarLine)) Object.keys(lines).map(Number).forEach((key) => {\n    const words = lines[key].split(' ')\n    // const i = key + 1\n    if (lines[key].search('//') !== -1) {\n      const remove = lines[key].substr(lines[key].search('//'), lines[key].length)\n      lines[key] = lines[key].replace(remove, '')\n    }\n    Object.keys(words).map(Number).forEach((j) => {\n      if (j < words.length - 1) {\n        const word = prepareWord(words[j])\n        if (word) result += `var ${word};\\n`\n        if (j !== words.length - 1) reserveVars(store, words[words.length - 1],\n          purgeVarName(words[j]))\n      }\n    })\n  })\n  return result.split('\\n').filter((v) => v).join('\\n')\n}\n\n/**\n * Is this line the beginning of the variable area?.\n *\n * @param {string} keyword - First word of line.\n * @param {string[]} restOfVarLine - Rest of words.\n * @example\n * // libs/i18n/variables = ['variables']\n * isVarsZone('variables', []) // return true\n * isVarsZone('variables', ['', '', '', '']) // return true\n * isVarsZone('Another', []) // return false\n * @see libs/i18n/variables\n * @returns {boolean} Is this line the beginning of the variable area?.\n */\nfunction isVarsZone(keyword, restOfVarLine) {\n  const { variables } = locale.all()\n  return variables.indexOf(keyword) !== -1 &&\n    (!restOfVarLine.length || restOfVarLine.every((v) => !v))\n}\n\n/**\n * Purge variable name of tokens.\n *\n * @param {string} word - Algorithm variable with token.\n * @todo Understand purgeVarName('=') use.\n * @example\n * purgeVarName('=') // return ' = '\n * purgeVarName(' ') // return ''\n * purgeVarName('\\t') // return ''\n * purgeVarName(',') // return ''\n * purgeVarName(':') // return ''\n * purgeVarName('array[10]') // return 'array'\n * @returns {string} Javascript variable without token.\n */\nfunction purgeVarName(word) {\n  return word\n    .replace(/=/g, ' = ')\n    .replace(/ /g, '')\n    .replace(/\\t/g, '')\n    .replace(/,/g, '')\n    .replace(/:/g, '')\n    .replace(/\\[[0-9]{1,9}\\]/g, '')\n}\n\n/**\n * Transform in var section, Algorithm equal, assign type, extra spaces or tabs, separators and\n * vectors to Javascript.\n *\n * @param {string} word - A Algorithm word.\n * @example\n * prepareWord('=') // return ' = '\n * prepareWord(' ') // return ''\n * prepareWord('\\t') // return ''\n * prepareWord(',') // return ''\n * prepareWord(':') // return ''\n * prepareWord('array[10]') // return 'array = new Vector(10)'\n * @returns {string} A Javacript word.\n */\nfunction prepareWord(word) {\n  return word\n    .replace(/=/g, ' = ')\n    .replace(/ /g, '')\n    .replace(/\\t/g, '')\n    .replace(/,/g, '')\n    .replace(/:/g, '')\n    .replace(/\\[/g, ' = new Vector(')\n    .replace(/\\]/g, ')')\n}\n\n/**\n * Reserve vars in the store.\n *\n * @param {object} store - Store of variables.\n * @param {string} isA - Variable type.\n * @param {string} word - Variable name.\n * @example\n * const store = {}\n * reserveVars(store, 'int', 'potato')\n * reserveVars(store, 'double', 'heyApple')\n * reserveVars(store, 'string', 'adc')\n * reserveVars(store, 'bool', 'mid')\n * // store {\n * //   potato: 'int',\n * //   heyApple: 'double',\n * //   adc: 'string',\n * //   mid: 'bool'\n * // }\n */\nfunction reserveVars(store, isA, word) {\n  const { type } = locale.all()\n  if (store && store.varAdd)\n  switch (isA) {\n    case type.int:\n      store.varAdd('int', word)\n      break\n    case type.double:\n      store.varAdd('double', word)\n      break\n    case type.string:\n      store.varAdd('string', word)\n      break\n    case type.bool:\n      store.varAdd('bool', word)\n      break\n    default:\n  }\n}\n\n/**\n * Ignore algorithm body.\n *\n * @param {string} code - Algorithm code.\n * @example\n * const code = [\n *   'algorithm easy',\n *   'variables',\n *   '  easy: boolean',\n *   'start',\n *   '   ...',\n *   'end'\n * ].join('\\n')\n * ignoreSentences(code) // return the same code but start ... end block\n * @returns {string} Get the code, less the body (start ... end).\n */\nfunction ignoreSentences(code) {\n  const { begin, end } = locale.all()\n  return code.replace(code.match(RegExp(`${begin}[\\\\s\\\\S]*?${end}$`, 'gm'))[0], '')\n}\n","import locale from '@choco/i18n'\n\n/** @module @choco/algorithm-transpiler/diff */\n\n/**\n * Diff between Algorithm code and Javascript code.\n *\n * @param {*} code - Algorithm code.\n * @param {*} js - Current Javascript code.\n * @example\n * alg = [\n *   'variables',\n *   '  bestAdc: string'\n * ].join('\\n')\n * js = 'var bestAdc'\n * diff(alg, js) // return 1\n * @returns {number} Diff between codes.\n */\nexport default function (code, js) {\n  const { begin } = locale.all()\n  const alg = code\n    .split(/\\n/)\n  let beginIndex = 1\n  while (alg[beginIndex].match(RegExp(begin)) === null) beginIndex++\n\n  beginIndex++\n\n  const localJS = js\n    .split(/\\n/)\n  let jsIndex = 0\n  while (/var/.test(localJS[jsIndex])) jsIndex++\n\n  return beginIndex - jsIndex\n}\n","import locale from '@choco/i18n'\n\n/** @module libs/algorithm/transform */\n\n// transform between native languaje and javascipt\nexport default function (code) {\n  const { tokens, transpiler, openBracket, closeBracket, write, read } = locale.all()\n  let line = stripCode(code)\n  let js = ''\n\n  // now the transpiler work\n  Object.keys(line).map(Number).forEach((i) => {\n    // ...\n    line[i] = purgeComment(line[i])\n    line[i] = purgeLine(line[i])\n\n    // vector.io(n).add(value)\n    line[i] = vectorAdd(line[i])\n\n    if (line[i].substr(0, 1) === ' ') {\n      const length = line[i].length - 1\n      line[i] = line[i].substr(1, length)\n    }\n\n    const length = line[i].length - 1\n    while (line[i].substr(length, 1) === ' ') line[i] = line[i].substr(0, length)\n\n    if (line[i] === '') return\n\n    // if (x === y)\n    line = ifIsEqual(line)\n\n    // for (...)\n    line[i] = forLoopCondition(line[i])\n\n    // do ... while (!...)\n    line[i] = doWhileLoopCondition(line[i])\n\n    // each word is separated into a array\n    const word = line[i].split(' ')\n\n    // this loop is to search in various dictionaries, and transform that code\n    Object.keys(word).map(Number).forEach((key) => {\n      // word[key] = word[key].replace(/=/g, ' === ')\n      // dictionaries of words\n      // open blackets\n      if (openBracket.indexOf(word[key]) !== -1) js += '{ '\n      // close brackets\n      else if (closeBracket.indexOf(word[key]) !== -1) js += '}'\n      else if (transpiler[word[key]]) js += `${transpiler[word[key]]} `\n      // dictionaries of tokens\n      else if (tokens[word[key]]) js += `${tokens[word[key]]} `\n      // and words not in the dictionary\n      else js += `${word[key]} `\n    })\n    // console.log('js', js)\n\n    // this fracment of code delete all space in the start of a line\n    // with a style like stack, first reverse the array\n    word.reverse()\n    // then in spaceInStart assign the last element in the stack\n    let spaceInStart = word.pop()\n    const ifNoHaveSpaceInStart = spaceInStart\n    // while it is equal at \"\"\n    // assign at spaceInStart the last element in the stack\n    while (spaceInStart === '') spaceInStart = word.pop()\n\n    // the last element never is \"\"\n    if (typeof spaceInStart === 'undefined') word.push(ifNoHaveSpaceInStart)\n    else word.push(spaceInStart)\n    // and reverse the array again to finish\n    word.reverse()\n\n    const lastLine = js.split('\\n')[js.split('\\n').length - 1]\n    if (lastLine.search('{') !== -1 || lastLine.search('}') !== -1) js += '\\n'\n\n    else if (write.indexOf(word[0]) !== -1) {\n      js = js.replace(\n        write[write.indexOf(word[0])],\n        'eval(write('\n      )\n      js += '));\\n'\n    }\n    else if (read.indexOf(word[0]) !== -1) {\n      js = js.replace(\n        read[read.indexOf(word[0])],\n        'eval(read(\"'\n      )\n      js += '\"));\\n'\n    }\n    else js += ';\\n'\n  })\n  return js\n}\n\nexport function forLoopCondition(lineArg) {\n  const { toWord } = locale.all()\n\n  // for (...)\n  let line = lineArg\n  const matchCondition = line.match(RegExp(`([\\\\s\\\\S]+${toWord}[\\\\s\\\\S]+)`))\n  if (matchCondition) {\n    let [conditionsFor] = matchCondition\n    conditionsFor = conditionsFor.split(toWord)\n    const ref = matchCondition[0].split(toWord)\n    conditionsFor[0] += ';'\n    conditionsFor[1] = conditionsFor[1].replace('=', '<=')\n    if (conditionsFor[1].search('reversed') === -1) conditionsFor[1] = conditionsFor[1].replace(')', '; i++)')\n    else conditionsFor[1] = conditionsFor[1].replace(')', '; i--)')\n    line = line.replace(ref[0], conditionsFor[0])\n    line = line.replace(ref[1], conditionsFor[1])\n    line = line.replace(toWord, '')\n  }\n  return line\n}\n\nexport function doWhileLoopCondition(line) {\n  const { toWord } = locale.all()\n\n  // do ... while (!...)\n  if (line.match(RegExp(`${toWord}\\\\s+([\\\\s\\\\S]+)`))) return line.replace('(', '(!(')\n    .replace(/\\)\\s{0,}$/, '))')\n    .replace(/=/g, '===')\n  return line\n}\n/**\n * Add assignment in Vector.\n *\n * @param {string} lineArg - Line of code.\n * @example\n * vectorAdd('stuff.io(7) <- 9') // return 'stuff.io(7).add(9)'\n * @returns {string} Line of code.\n */\nexport function vectorAdd(lineArg) {\n  let line = lineArg\n  // vector.io(n).add(value)\n  while (line.match(/\\.io\\([0-9a-zA-Z]+\\)\\s+<-\\s+[a-zA-Z0-9 ]/)) {\n    line = line.replace(/<-/, '')\n    const exp = line.match(/\\S+/g)\n    line = `${exp[0]}.add(`\n    if (Number.isNaN(+exp[1])) line += `\"${exp[1]}\"`\n    else line += exp[1]\n    line += ')'\n  }\n  return line\n}\n\n/**\n * Add space to prevent bad transpile, and transform array to class Vector.\n *\n * @param {string} line - Line of code.\n * @example\n * purgeLine('function stuff()do') // return 'function stuff () do'\n * purgeLine('array[13]') // return 'array.io(13)'\n * @returns {string} Line of code\n */\nexport function purgeLine(line) {\n  return line\n    .replace(/\\(/g, ' (')\n    .replace(/\\)/g, ') ')\n    .replace(/ {2}/g, ' ')\n    .replace(/\\[/g, '.io(')\n    .replace(/\\]/g, ')')\n}\n\n/**\n * Purge comments of code.\n *\n * @param {string} lineArg - Line of code.\n * @example\n * purgeComment('for (bestADC === \\'Tristana\\') do // some stuff')\n * // return 'for (bestADC === \\'Tristana\\') do '\n * @returns {string} Line of code.\n */\nexport function purgeComment(lineArg) {\n  // ...\n  let line = lineArg\n  if (line.search('//') !== -1) {\n    const remove = line.substr(line.search('//'), line.length)\n    line = line.replace(remove, '')\n  }\n  return line\n}\n\n\nexport function stripCode(codeArg) {\n  const { begin, end } = locale.all()\n\n  // good in this space we are going to make a separation between the code\n  // and the variables\n  const [code] = codeArg.match(RegExp(`${begin}[\\\\s\\\\S]*?${end}$`, 'gm'))\n  // each line is separated into a array\n  const lines = code.split('\\n')\n\n  // the word \"fin\" is deleted\n  if (lines[lines.length - 1].search(end) !== -1) lines.pop()\n\n  // reverse the line of array\n  lines.reverse()\n  // the word \"inicio\" is deleted\n  if (lines[lines.length - 1].search(begin) !== -1) lines.pop()\n\n  // reverse the line of array\n  lines.reverse()\n  return lines\n}\n\n/**\n * Parse equal token from Algorithm to Javascript.\n *\n * @param {string[]} linesArg - Line of code.\n * @example\n * ifIsEqual(['for (text = \\'Not text\\') do'])\n * // return ['for (text === \\'Not text\\') do']\n * @returns {string[]} Lines of code.\n */\nfunction ifIsEqual(linesArg) {\n  const { openBracket } = locale.all()\n\n  // if (x === y)\n  const lines = linesArg\n  Object.keys(lines).map(Number).forEach((key) => {\n    if (lines[key].match(RegExp(`=(.)+${openBracket[key]}`))) lines[key] = lines[key].replace(/=/g, ' === ')\n  })\n  return lines\n}\n","import files from './files'\nimport vars from './variables'\nimport diffAlg from './diff'\nimport transform from './transform'\n\n// function joinCodes(tabs) {\n//   return tabs\n//     .reverse()\n//     .map((value) => value.content)\n//     .join()\n// }\n\nlet tabs\nlet store\n\n\nexport function setDispatch({ varAdd, varReset }) {\n  store = { varAdd, varReset }\n}\n\nexport function setTabs(externalTabs) {\n  tabs = externalTabs\n}\n\nexport function toJS() {\n  store.varReset()\n\n  // and execute a interpreter\n  // const codesInString = joinCodes(tabs)\n  const codesInString = tabs[0].content\n  const [title, codeFromTitle] = files(codesInString)\n  const literals = vars(codeFromTitle, store)\n  const diff = diffAlg(codesInString, literals)\n  const map = tabs.map((v) => v.content)\n\n  // show the output\n  const code = transform(codeFromTitle)\n  return {\n    title,\n    literals,\n    code,\n    diff,\n    map\n  }\n}\n","/** @module @choco/algorithm-transpiler/vector */\n\n/** @classdesc Represent a Array of algorithms. */\nexport class Vector {\n  /**\n   * Constructor.\n   *\n   * @param {number} size - Vector size.\n   * @example\n   * new Vector(10)\n   */\n  constructor(size) {\n    if (size <= 0 || typeof size !== 'number') throw new Error('ERROR: invalid array argument')\n\n    /** vector size */\n    this.size = size\n\n    /** inner array */\n    this.array = []\n  }\n\n  /**\n   * Assign value in vector.\n   *\n   * @param {any} value - Value to be added.\n   * @param {number} index - Index in vector.\n   */\n  add(value, index) {\n    const fixIndex = index - 1\n    if (fixIndex === -1) throw new Error('ERROR: array null point')\n    if (fixIndex < this.size && this.size > 0) this.array[fixIndex] = value\n    else throw new Error('ERROR: array overflow')\n  }\n\n  /**\n   * Get a value of vector.\n   *\n   * @param {number} index - Index of vector.\n   * @returns {any} Value store in index argument.\n   */\n  show(index) {\n    const start = index - 1\n    if (start < this.size && start >= 0) return this.array[start]\n    throw new Error('ERROR: array null point')\n  }\n\n  /**\n   * Provide an alternative interface, used in libs/algorithm/transform.\n   *\n   * @param {number} index - Index of Vector.\n   * @see {@link transform}\n   * @returns {}\n   */\n  io(index) {\n    return {\n      /**\n       * Assign value in vector\n       * @param {any} value - Value to be added\n       */\n      add: (value) => this.add(value, index),\n\n      /**\n       * Get a value of vector\n       * @returns {any} Value store in index argument\n       */\n      show: () => this.show(index),\n\n      /**\n       * Get value of vector if it's parse to string\n       * @returns {any} Value store in index argument\n       */\n      toString: () => this.show(index),\n\n      /**\n       * Confirm that is a vector\n       * @returns {boolean}\n       */\n      isVector: () => true\n    }\n  }\n}\n","import keychain from '@choco/keychain'\nimport locale from '@choco/i18n'\n\n/** @module @choco/algorithm-transpiler/io */\n\nexport const io = {\n  show: true,\n\n  reset() {\n    this.text = undefined\n    this.lastText = undefined\n    this.show = true\n  },\n\n  addText(text) {\n    this.lastText = this.text\n    this.text = text\n  },\n\n  error() {\n    this.show = false\n  }\n}\n\nexport function read(toRead, variables, lastLine) {\n  const { typeError } = locale.all()\n  let toReadCopy = toRead\n\n  // flags\n  let isVector = false\n  let newLastLine\n\n  // clean up unnecessary signs\n  while (toReadCopy.substr(0, 1) === ' ') {\n    const length = toReadCopy.length - 1\n    toReadCopy = toReadCopy.substr(1, length)\n  }\n  while (toReadCopy.substr(toReadCopy.length - 1, 1) === ' ') toReadCopy = toReadCopy.substr(0, toReadCopy.length - 1)\n  let input\n\n  if (io.text && io.text !== io.lastRext) input = prompt(io.text)\n  else input = prompt('')\n  // if var not exist, not work\n  if (lastLine && lastLine.var) newLastLine = Object.freeze({ ...lastLine, content: input })\n  else newLastLine = Object.freeze({ ...lastLine, var: input })\n\n  if (typeof toReadCopy === 'object') return readResponse(`${toReadCopy} = ${input};`, newLastLine)\n  // vector\n  if (toReadCopy.search(/\\.io\\(/) !== -1) {\n    isVector = true\n    toReadCopy += `.add(${input})`\n  }\n  // here in runtime show the mistakes in assignings\n  console.log(variables, variables[toReadCopy], 'copy')\n  switch (variables[toReadCopy]) {\n    case 'int':\n      if (Number.isNaN(Number(input)) || +input !== Math.trunc(input)) return readResponse(`write('${typeError.int}'); io.error();`, newLastLine)\n      break\n    case 'double':\n      if (Number.isNaN(Number(input))) return readResponse(`write('${typeError.double}'); io.error();`, newLastLine)\n      break\n    case 'string':\n      break\n    case 'bool':\n      if (Number.isNaN(Number(input)) || (input === true || input === false)) return readResponse(`write('${typeError.bool}'); io.error();`, newLastLine)\n      break\n    default:\n      throw new Error('Unknow var type')\n  }\n\n  if (variables[toReadCopy] === 'string') return readResponse(`${toReadCopy} = '${input}';`, newLastLine)\n\n  if (isVector) return readResponse(`${toReadCopy};`, newLastLine)\n\n  return readResponse(`${toReadCopy} = ${input};`, newLastLine)\n}\n\nfunction readResponse(assign, lastLine) {\n  // const id = keychain('line')\n  return Object.freeze({ assign, lastLine })\n}\n\nexport function write(...args) {\n  // var\n  let result = ''\n  let error\n  Object.values(args[0]).forEach((text) => {\n    let textCopy = text\n    if (typeof textCopy === 'object' && textCopy.isVector && textCopy.isVector()) textCopy = textCopy.show()\n\n    if (typeof textCopy === 'number' && Number.isNaN(textCopy)) error = `write('${error.stringForNumber}'); io.error();`\n    if (typeof textCopy === 'number' && !Number.isFinite(textCopy)) error = `write('${error.infinity}'); io.error();`\n    result += textCopy\n  })\n\n  if (error) return Object.freeze({\n    id: keychain('line'),\n    error: true,\n    content: error\n  })\n  // io.show is a flag, avoids execution after errors\n  if (io.show) {\n    // if (io.lastText === result)\n    //   io.resetLast()\n    io.addText(result)\n    return Object.freeze({\n      id: keychain('line'),\n      error: false,\n      content: result\n    })\n  }\n  return Object.freeze({\n    id: keychain('line'),\n    error: false,\n    content: ''\n  })\n}\n","import { algorithmTranspilerLang } from './lang'\n\nalgorithmTranspilerLang()\n\nexport * from './lang'\nexport * from './toJS'\nexport * from './vector'\nexport * from './io'"],"names":["staticTokens","lang","locale","set","o","y","no","si","sino","mientras","repetir","hasta","para","hacer","int","double","string","bool","stringForNumber","infinity","join","algorithmTranspilerLang","en","es","code","algorithmWord","all","firstLine","lines","split","keyword","name","restOfWords","length","Error","store","literals","ignoreSentences","restOfVarLine","result","isVarsZone","Object","keys","map","Number","forEach","key","words","search","remove","substr","replace","j","word","prepareWord","reserveVars","purgeVarName","filter","v","variables","indexOf","every","isA","type","varAdd","begin","end","match","RegExp","js","alg","beginIndex","localJS","jsIndex","test","tokens","transpiler","openBracket","closeBracket","write","read","line","stripCode","i","purgeComment","purgeLine","vectorAdd","ifIsEqual","forLoopCondition","doWhileLoopCondition","reverse","spaceInStart","pop","ifNoHaveSpaceInStart","push","lastLine","lineArg","toWord","matchCondition","conditionsFor","ref","exp","isNaN","codeArg","linesArg","tabs","setDispatch","varReset","setTabs","externalTabs","toJS","codesInString","content","title","codeFromTitle","files","vars","diff","diffAlg","transform","Vector","constructor","size","array","add","value","index","fixIndex","show","start","io","toString","isVector","reset","text","undefined","lastText","addText","error","toRead","typeError","toReadCopy","newLastLine","input","lastRext","prompt","var","freeze","readResponse","console","log","Math","trunc","assign","args","values","textCopy","isFinite","id","keychain"],"mappings":"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"}