{"version":3,"file":"algorithm-transpiler.amd.js","sources":["../src/lang/common.js","../src/lang/en.js","../src/lang/es.js","../src/lang/index.js","../src/files.js","../src/comments.js","../src/spaces.js","../src/variables.js","../src/diff.js","../src/transform.js","../src/toJS.js","../src/vector.js","../src/io.js","../src/index.js"],"sourcesContent":["export const staticTokens = {\n  // algorithm : js\n  '<>': '!==',\n  '<=': '<=',\n  '>=': '>=',\n  '<': '<',\n  '>': '>',\n  '<-': '='\n}","import locale from '@choco/i18n'\nimport { staticTokens } from './common'\n\nconst lang = 'en'\n\nexport default function() {\n  locale.set(lang, 'algorithmWord', 'algorithm')\n  locale.set(lang, 'begin', 'begin')\n  locale.set(lang, 'end', 'end')\n  locale.set(lang, 'forWord', 'for')\n  locale.set(lang, 'toWord', 'until')\n  locale.set(lang, 'trueWord', 'true')\n  locale.set(lang, 'falseWord', 'false')\n\n  locale.set(lang, 'tokens', { ...staticTokens, ...{\n    // algorithm : js\n    or: '||',\n    and: '&&',\n    not: '!'\n  }})\n\n  locale.set(lang, 'variables', [\n    // map\n    'variables',\n    'var'\n  ])\n\n  locale.set(lang, 'transpiler', {\n    // algorithm : js\n    if: 'if',\n    else: '}\\nelse {',\n    while: 'while',\n    repeat: 'do {',\n    until: '} while',\n    for: 'for',\n    do: 'do'\n  })\n\n  locale.set(lang, 'openBracket', [\n    // map\n    'do',\n    'until'\n  ])\n\n\n  locale.set(lang, 'closeBracket', [\n    // map\n    'endif',\n    'end_if',\n    'endwhile',\n    'end_while',\n    'endfor',\n    'end_for'\n  ])\n\n  locale.set(lang, 'write', [\n    // map\n    'show',\n    'write',\n    'print'\n  ])\n\n  locale.set(lang, 'read', [\n    // map\n    'read'\n  ])\n\n  locale.set(lang, 'type', {\n    // type : algorithm\n    int: 'integer',\n    double: 'float',\n    string: 'string',\n    bool: 'boolean'\n  })\n\n  locale.set(lang, 'typeError', {\n    // type : string in es\n    int: 'Error: don\\'t is integer',\n    double: 'Error: don\\'t is float',\n    string: 'Error: don\\'t is string',\n    bool: 'Error: don\\'t is boolean',\n    unknow: (type) => `Error: ${type} is not a valid variable type`\n  })\n\n  locale.set(lang, 'error', {\n    // error name : string in es\n    stringForNumber: 'Error: a number cannot multiply a carapter',\n    infinity: 'Error: dividing by 0 causes an infinite number',\n    dispatchers: 'Error: dispatchers were not provided'\n  })\n\n  locale.set(lang, 'code', [\n    'algorithm easy',\n    'variables',\n    'number, i, table[10]: integer',\n    'begin',\n    '  i <- 0',\n    '  write \"Enter number a multiplier: \"',\n    '  read number',\n    '  while (i < 10) do',\n    '    i <- i + 1',\n    '    table[i] <- number * i',\n    '    write number, \" * \", i, \" = \", number * i',\n    '  endwhile',\n    'end',\n    ''\n  ].join('\\n'))\n}\n","import locale from '@choco/i18n'\nimport { staticTokens } from './common'\n\nconst lang = 'es'\n\nexport default function() {\n  locale.set(lang, 'algorithmWord', 'algoritmo')\n  locale.set(lang, 'begin', 'inicio')\n  locale.set(lang, 'end', 'fin')\n  locale.set(lang, 'forWord', 'para')\n  locale.set(lang, 'toWord', 'hasta')\n  locale.set(lang, 'trueWord', 'verdadero')\n  locale.set(lang, 'falseWord', 'falso')\n\n  locale.set(lang, 'tokens', { ...staticTokens, ...{\n    // algorithm : js\n    o: '||',\n    y: '&&',\n    no: '!'\n  }})\n\n  locale.set(lang, 'variables', [\n    // map\n    'variables',\n    'var'\n  ])\n\n  locale.set(lang, 'transpiler', {\n    // algorithm : js\n    si: 'if',\n    sino: '}\\nelse {',\n    mientras: 'while',\n    repetir: 'do {',\n    hasta: '} while',\n    para: 'for',\n    // hacer: 'do'\n  })\n\n  locale.set(lang, 'openBracket', [\n    // map\n    'hacer',\n    'entonces'\n  ])\n\n\n  locale.set(lang, 'closeBracket', [\n    // map\n    'finsi',\n    'fin_si',\n    'finmientras',\n    'fin_mientras',\n    'finpara',\n    'fin_para'\n  ])\n\n  locale.set(lang, 'write', [\n    // map\n    'mostrar',\n    'escribir',\n    'imprimir'\n  ])\n\n  locale.set(lang, 'read', [\n    // map\n    'leer'\n  ])\n\n  locale.set(lang, 'type', {\n    // type : algorithm\n    int: 'entero',\n    double: 'real',\n    string: 'carapter',\n    bool: 'booleano'\n  })\n\n  locale.set(lang, 'typeError', {\n    // type : string in es\n    int: 'Error: no es entero',\n    double: 'Error: no es flotante',\n    string: 'Error: no es una cadena',\n    bool: 'Error: no es booleano',\n    unknow: (type) => `Error: ${type} no es un tipo de variable valido`\n  })\n\n  locale.set(lang, 'error', {\n    // error name     : string in es\n    stringForNumber: 'Error: un numero no puede multiplicar a un carapter',\n    infinity: 'Error: dividir entre 0 causa un numero infinito',\n    dispatchers: 'Error: No se recibieron dispatchers'\n  })\n\n  locale.set(lang, 'code', [\n    'algoritmo facilito',\n    'variables',\n    'numero, i, tabla[10]: entero',\n    'inicio',\n    '  i <- 0',\n    '  mostrar \"Ingrese numero a multiplicar: \"',\n    '  leer numero',\n    '  mientras (i < 10) hacer',\n    '    i <- i + 1',\n    '    tabla[i] <- numero * i',\n    '    mostrar numero, \" * \", i, \" = \", numero * i',\n    '  finmientras',\n    'fin'\n  ].join('\\n'))\n}\n","import en from './en'\nimport es from './es'\n\nexport function algorithmTranspilerLang() {\n  en()\n  es()\n}\n\n// export default algorithmTranspilerLang\n","import locale from '@choco/i18n'\n\n\n/** @module libs/algorithm/files */\n\n/**\n * @typedef {object} Files\n * @param {string} code - Algorithm lines.\n */\n\n/**\n * Get name of algorithm.\n * @param {string} code - Algorithm lines\n * @returns {Files} Algorithm name and lines but first line\n * return\n */\nexport default function (code) {\n  const { algorithmWord } = locale.all()\n  const [firstLine, ...lines] = code.split('\\n')\n  const [keyword, name, ...restOfWords] = firstLine.split(' ')\n  if (keyword === algorithmWord && name && restOfWords.length === 0) return [name, lines.join('\\n')]\n  throw new Error('name is invalid')\n}\n","/**\n * Remove comments from line(s)\n * @param {string|string[]} code - Line(s) to be replaced\n * @example\n * import removeComments from '@choco/algorithm-transpiler'\n *\n * removeComments('hi //') // returns 'hi'\n * removeComments(['hi //', 'apple //']) // returns ['hi', 'apple']\n * @returns {string|string[]} Line(s) without comments\n */\nexport default function comments(code) {\n  const regexp = /( ?\\/\\/.*$)/gm\n  return code instanceof Array ?\n    code.map(v => v.replace(regexp, '')) :\n    code.replace(regexp, '')\n}","/**\n * Remove spaces from code.\n *\n * @param {string} code - Code to remove spaces.\n * @example\n * spaces([' hello   ', '  apple    ']) // returns ['hello', 'apple']\n * @returns {string} Code without spaces.\n */\nexport default function spaces(code) {\n  const lines = code.split('\\n')\n  return lines.map(removeSpacesInLine).join('\\n')\n}\n\n/**\n * Remove spaces from line.\n *\n * @param {string} line - Line to remove spaces.\n * @example\n * spaces(' hello   ') // returns 'hello'\n * @returns {string} Line without spaces.\n */\nfunction removeSpacesInLine(line) {\n  return line.split(' ').reduce((result, value) => {\n    if (!result.code) {\n      result = {\n        code: [],\n        inString: false\n      }\n    }\n\n    if (value === '\"') result.inString = !result.inString\n    if (!result.inString && value) result.code.push(value)\n    else if (result.inString) result.code.push(value)\n\n    return result\n  }, {}).code.join(' ')\n}","import { compose } from '@choco/functional'\nimport comments from './comments'\nimport removeSpaces from './spaces'\nimport locale from '@choco/i18n'\n\n/** @module @choco/algorithm-transpiler/variables */\n\n/**\n * Transform Algorithm variables in Javascript variables.\n *\n * @param {string} code - Algorithm code.\n * @param {object} store - Store of variables.\n * @example\n * import variables from 'libs/algorithm/variables'\n *\n * const store = {}\n * const code = [\n *   'algorithm easy',\n *   'variables',\n *   '  stuff: string',\n *   'start'.\n *   '  ...'.\n *   'end'\n * ]\n * variables(code, store) // return 'var stuff;\\n'\n * @returns {string} Javascript variables.\n */\nexport default function (code, store) {\n  const [firstLine, ...lines] = compose(comments, removeSpaces, ignoreSentences)(code).split('\\n')\n  const [keyword, ...restOfVarLine] = firstLine.split(' ')\n  let result = ''\n\n  if (isVarsZone(keyword, restOfVarLine)) Object.keys(lines).map(Number).forEach((key) => {\n    const words = lines[key].split(' ').filter((v) => v)\n\n    Object.keys(words).map(Number).forEach((j) => {\n      if (j < words.length - 1) {\n        const word = prepareWord(words[j])\n        result += `var ${word};\\n`\n        reserveVars(store, words[words.length - 1], purgeVarName(words[j]))\n      }\n    })\n  })\n  return result.split('\\n').filter((v) => v).join('\\n')\n}\n\n/**\n * Is this line the beginning of the variable area?.\n *\n * @param {string} keyword - First word of line.\n * @param {string[]} restOfVarLine - Rest of words.\n * @example\n * // libs/i18n/variables = ['variables']\n * isVarsZone('variables', []) // return true\n * isVarsZone('variables', ['', '', '', '']) // return true\n * isVarsZone('Another', []) // return false\n * @see libs/i18n/variables\n * @returns {boolean} Is this line the beginning of the variable area?.\n */\nfunction isVarsZone(keyword, restOfVarLine) {\n  const { variables } = locale.all()\n  return variables.indexOf(keyword) !== -1 && !restOfVarLine.length\n}\n\n/**\n * Purge variable name of tokens.\n *\n * @param {string} word - Algorithm variable with token.\n * @todo Understand purgeVarName('=') use.\n * @example\n * purgeVarName('=') // return ' = '\n * purgeVarName(' ') // return ''\n * purgeVarName('\\t') // return ''\n * purgeVarName(',') // return ''\n * purgeVarName(':') // return ''\n * purgeVarName('array[10]') // return 'array'\n * @returns {string} Javascript variable without token.\n */\nfunction purgeVarName(word) {\n  return word\n    .replace(/=/g, ' = ')\n    .replace(/ /g, '')\n    .replace(/\\t/g, '')\n    .replace(/,/g, '')\n    .replace(/:/g, '')\n    .replace(/\\[[0-9]{1,9}\\]/g, '')\n}\n\n/**\n * Transform in var section, Algorithm equal, assign type, extra spaces or tabs, separators and\n * vectors to Javascript.\n *\n * @param {string} word - A Algorithm word.\n * @example\n * prepareWord('=') // return ' = '\n * prepareWord(' ') // return ''\n * prepareWord('\\t') // return ''\n * prepareWord(',') // return ''\n * prepareWord(':') // return ''\n * prepareWord('array[10]') // return 'array = new Vector(10)'\n * @returns {string} A Javacript word.\n */\nfunction prepareWord(word) {\n  return word\n    .replace(/=/g, ' = ')\n    .replace(/ /g, '')\n    .replace(/\\t/g, '')\n    .replace(/,/g, '')\n    .replace(/:/g, '')\n    .replace(/\\[/g, ' = new Vector(')\n    .replace(/\\]/g, ')')\n}\n\n/**\n * Reserve vars in the store.\n *\n * @param {object} store - Store of variables.\n * @param {string} isA - Variable type.\n * @param {string} word - Variable name.\n * @example\n * // store generally is a reducer dispatchers\n * const store = {\n *   varAdd: () => {} // dispatch callback\n * }\n * reserveVars(store, 'int', 'potato')\n * reserveVars(store, 'double', 'heyApple')\n * reserveVars(store, 'string', 'adc')\n * reserveVars(store, 'bool', 'mid')\n * // store {\n * //   potato: 'int',\n * //   heyApple: 'double',\n * //   adc: 'string',\n * //   mid: 'bool'\n * // }\n */\nfunction reserveVars(store, isA, word) {\n  const { type, error, typeError } = locale.all()\n  if (!store || !store.varAdd) throw new Error(error.dispatchers)\n  switch (isA) {\n    case type.int:\n      store.varAdd('int', word)\n      break\n    case type.double:\n      store.varAdd('double', word)\n      break\n    case type.string:\n      store.varAdd('string', word)\n      break\n    case type.bool:\n      store.varAdd('bool', word)\n      break\n    default:\n      throw new Error(typeError.unknow(isA))\n  }\n}\n\n/**\n * Ignore algorithm body.\n *\n * @param {string} code - Algorithm code.\n * @example\n * const code = [\n *   'algorithm easy',\n *   'variables',\n *   '  easy: boolean',\n *   'start',\n *   '   ...',\n *   'end'\n * ].join('\\n')\n * ignoreSentences(code) // return the same code but start ... end block\n * @returns {string} Get the code, less the body (start ... end).\n */\nfunction ignoreSentences(code) {\n  const { begin, end } = locale.all()\n  // return code.replace(code.match(RegExp(`${begin}[\\\\s\\\\S]*?${end}$`, 'gm'))[0], '')\n  return code.replace(RegExp(`([\\\\s\\\\S]*?)(\\\\n${begin}[\\\\s\\\\S]*?${end}$)`, 'gm'), '$1')\n}\n","import locale from '@choco/i18n'\n\n/** @module @choco/algorithm-transpiler/diff */\n\n/**\n * Diff between Algorithm code and Javascript code.\n *\n * @param {*} code - Algorithm code.\n * @param {*} js - Current Javascript code.\n * @example\n * const alg = [\n *   'variables',\n *   '  bestAdc: string'\n * ].join('\\n')\n * const js = 'var bestAdc'\n * diff(alg, js) // return 1\n * @returns {number} Diff between codes.\n */\nexport default function (code, js) {\n  const { begin } = locale.all()\n  const alg = code\n    .split(/\\n/)\n  let beginIndex = 1\n  while (alg[beginIndex].match(RegExp(begin)) === null) beginIndex += 1\n\n  beginIndex += 1\n\n  const localJS = js\n    .split(/\\n/)\n  let jsIndex = 0\n  while (/var/.test(localJS[jsIndex])) jsIndex++\n\n  return beginIndex - jsIndex\n}\n","import locale from '@choco/i18n'\nimport { algorithmTranspilerLang } from './lang'\n\nalgorithmTranspilerLang()\n\n/** @module libs/algorithm/transform */\n\n// transform between native languaje and javascipt\nexport default function (code) {\n  const { tokens, transpiler, openBracket, closeBracket, write, read } = locale.all()\n  let line = stripCode(code)\n  let js = ''\n\n  // now the transpiler work\n  Object.keys(line).map(Number).forEach((i) => {\n    // ...\n    line[i] = purgeComment(line[i])\n    line[i] = purgeLine(line[i])\n\n    // vector.io(n).add(value)\n    line[i] = vectorAdd(line[i])\n\n    if (line[i].substr(0, 1) === ' ') {\n      const length = line[i].length - 1\n      line[i] = line[i].substr(1, length)\n    }\n\n    const length = line[i].length - 1\n    while (line[i].substr(length, 1) === ' ') line[i] = line[i].substr(0, length)\n\n    if (line[i] === '') return\n\n    // if (x === y)\n    line = ifIsEqual(line)\n\n    // for (...)\n    line[i] = forLoopCondition(line[i])\n\n    // do ... while (!...)\n    line[i] = doWhileLoopCondition(line[i])\n\n    // each word is separated into a array\n    const word = line[i].split(' ')\n\n    // this loop is to search in various dictionaries, and transform that code\n    Object.keys(word).map(Number).forEach((key) => {\n      // word[key] = word[key].replace(/=/g, ' === ')\n      // dictionaries of words\n      // open blackets\n      if (openBracket.indexOf(word[key]) !== -1) js += '{ '\n      // close brackets\n      else if (closeBracket.indexOf(word[key]) !== -1) js += '}'\n      else if (transpiler[word[key]]) js += `${transpiler[word[key]]} `\n      // dictionaries of tokens\n      else if (tokens[word[key]]) js += `${tokens[word[key]]} `\n      // and words not in the dictionary\n      else js += `${word[key]} `\n    })\n    // console.log('js', js)\n\n    // this fracment of code delete all space in the start of a line\n    // with a style like stack, first reverse the array\n    word.reverse()\n    // then in spaceInStart assign the last element in the stack\n    let spaceInStart = word.pop()\n    const ifNoHaveSpaceInStart = spaceInStart\n    // while it is equal at \"\"\n    // assign at spaceInStart the last element in the stack\n    while (spaceInStart === '') spaceInStart = word.pop()\n\n    // the last element never is \"\"\n    if (typeof spaceInStart === 'undefined') word.push(ifNoHaveSpaceInStart)\n    else word.push(spaceInStart)\n    // and reverse the array again to finish\n    word.reverse()\n\n    const lastLine = js.split('\\n')[js.split('\\n').length - 1]\n    if (lastLine.search('{') !== -1 || lastLine.search('}') !== -1) js += '\\n'\n\n    else if (write.indexOf(word[0]) !== -1) {\n      js = js.replace(\n        write[write.indexOf(word[0])],\n        'eval(write('\n      )\n      js += '));\\n'\n    }\n    else if (read.indexOf(word[0]) !== -1) {\n      js = js.replace(\n        read[read.indexOf(word[0])],\n        'eval(read(\"'\n      )\n      js += '\"));\\n'\n    }\n    else js += ';\\n'\n  })\n  return js\n}\n\nexport function forLoopCondition(lineArg) {\n  const { toWord } = locale.all()\n\n  // for (...)\n  let line = lineArg\n  const matchCondition = line.match(RegExp(`([\\\\s\\\\S]+${toWord}[\\\\s\\\\S]+)`))\n  if (matchCondition) {\n    let [conditionsFor] = matchCondition\n    conditionsFor = conditionsFor.split(toWord)\n    const ref = matchCondition[0].split(toWord)\n    conditionsFor[0] += ';'\n    conditionsFor[1] = conditionsFor[1].replace('=', '<=')\n    if (conditionsFor[1].search('reversed') === -1) conditionsFor[1] = conditionsFor[1].replace(')', '; i++)')\n    else conditionsFor[1] = conditionsFor[1].replace(')', '; i--)')\n    line = line.replace(ref[0], conditionsFor[0])\n    line = line.replace(ref[1], conditionsFor[1])\n    line = line.replace(toWord, '')\n  }\n  return line\n}\n\nexport function doWhileLoopCondition(line) {\n  const { toWord } = locale.all()\n\n  // do ... while (!...)\n  if (line.match(RegExp(`${toWord}\\\\s+([\\\\s\\\\S]+)`))) return line.replace('(', '(!(')\n    .replace(/\\)\\s{0,}$/, '))')\n    .replace(/=/g, '===')\n  return line\n}\n/**\n * Add assignment in Vector.\n *\n * @param {string} lineArg - Line of code.\n * @example\n * vectorAdd('stuff.io(7) <- 9') // return 'stuff.io(7).add(9)'\n * @returns {string} Line of code.\n */\nexport function vectorAdd(lineArg) {\n  let line = lineArg\n  // vector.io(n).add(value)\n  while (line.match(/\\.io\\([0-9a-zA-Z]+\\)\\s+<-\\s+[a-zA-Z0-9 ]/)) {\n    line = line.replace(/<-/, '')\n    const exp = line.match(/\\S+/g)\n    line = `${exp[0]}.add(`\n    if (Number.isNaN(+exp[1])) line += `\"${exp[1]}\"`\n    else line += exp[1]\n    line += ')'\n  }\n  return line\n}\n\n/**\n * Add space to prevent bad transpile, and transform array to class Vector.\n *\n * @param {string} line - Line of code.\n * @example\n * purgeLine('function stuff()do') // return 'function stuff () do'\n * purgeLine('array[13]') // return 'array.io(13)'\n * @returns {string} Line of code\n */\nexport function purgeLine(line) {\n  return line\n    .replace(/\\(/g, ' (')\n    .replace(/\\)/g, ') ')\n    .replace(/ {2}/g, ' ')\n    .replace(/\\[/g, '.io(')\n    .replace(/\\]/g, ')')\n}\n\n/**\n * Purge comments of code.\n *\n * @param {string} lineArg - Line of code.\n * @example\n * purgeComment('for (bestADC === \\'Tristana\\') do // some stuff')\n * // return 'for (bestADC === \\'Tristana\\') do '\n * @returns {string} Line of code.\n */\nexport function purgeComment(lineArg) {\n  // ...\n  let line = lineArg\n  if (line.search('//') !== -1) {\n    const remove = line.substr(line.search('//'), line.length)\n    line = line.replace(remove, '')\n  }\n  return line\n}\n\n\nexport function stripCode(codeArg) {\n  const { begin, end } = locale.all()\n\n  // good in this space we are going to make a separation between the code\n  // and the variables\n  const [code] = codeArg.match(RegExp(`${begin}[\\\\s\\\\S]*?${end}$`, 'gm'))\n  // each line is separated into a array\n  const lines = code.split('\\n')\n\n  // the word \"fin\" is deleted\n  if (lines[lines.length - 1].search(end) !== -1) lines.pop()\n\n  // reverse the line of array\n  lines.reverse()\n  // the word \"inicio\" is deleted\n  if (lines[lines.length - 1].search(begin) !== -1) lines.pop()\n\n  // reverse the line of array\n  lines.reverse()\n  return lines\n}\n\n/**\n * Parse equal token from Algorithm to Javascript.\n *\n * @param {string[]} linesArg - Line of code.\n * @example\n * ifIsEqual(['for (text = \\'Not text\\') do'])\n * // return ['for (text === \\'Not text\\') do']\n * @returns {string[]} Lines of code.\n */\nfunction ifIsEqual(linesArg) {\n  const { openBracket } = locale.all()\n\n  // if (x === y)\n  const lines = linesArg\n  Object.keys(lines).map(Number).forEach((key) => {\n    if (lines[key].match(RegExp(`=(.)+${openBracket[key]}`))) lines[key] = lines[key].replace(/=/g, ' === ')\n  })\n  return lines\n}\n","import files from './files'\nimport vars from './variables'\nimport diffAlg from './diff'\nimport transform from './transform'\n\n// function joinCodes(tabs) {\n//   return tabs\n//     .reverse()\n//     .map((value) => value.content)\n//     .join()\n// }\n\nlet tabs\nlet store\n\n\nexport function setDispatch({ varAdd, varReset }) {\n  store = { varAdd, varReset }\n}\n\nexport function setTabs(externalTabs) {\n  tabs = externalTabs\n}\n\nexport function toJS() {\n  store.varReset()\n\n  // and execute a interpreter\n  // const codesInString = joinCodes(tabs)\n  const codesInString = tabs[0].content\n  const [title, codeFromTitle] = files(codesInString)\n  const literals = vars(codeFromTitle, store)\n  const diff = diffAlg(codesInString, literals)\n  const map = tabs.map((v) => v.content)\n\n  // show the output\n  const code = transform(codeFromTitle)\n  return {\n    title,\n    literals,\n    code,\n    diff,\n    map\n  }\n}\n","/** @module @choco/algorithm-transpiler/vector */\n\n/** @classdesc Represent a Array of algorithms. */\nexport class Vector {\n  /**\n   * Constructor.\n   *\n   * @param {number} size - Vector size.\n   * @example\n   * new Vector(10)\n   */\n  constructor(size) {\n    if (size <= 0 || typeof size !== 'number') throw new Error('ERROR: invalid array argument')\n\n    /** vector size */\n    this.size = size\n\n    /** inner array */\n    this.array = []\n  }\n\n  /**\n   * Assign value in vector.\n   *\n   * @param {any} value - Value to be added.\n   * @param {number} index - Index in vector.\n   */\n  add(value, index) {\n    const fixIndex = index - 1\n    if (fixIndex === -1) throw new Error('ERROR: array null point')\n    if (fixIndex < this.size && this.size > 0) this.array[fixIndex] = value\n    else throw new Error('ERROR: array overflow')\n  }\n\n  /**\n   * Get a value of vector.\n   *\n   * @param {number} index - Index of vector.\n   * @returns {any} Value store in index argument.\n   */\n  show(index) {\n    const start = index - 1\n    if (start < this.size && start >= 0) return this.array[start]\n    throw new Error('ERROR: array null point')\n  }\n\n  /**\n   * Provide an alternative interface, used in libs/algorithm/transform.\n   *\n   * @param {number} index - Index of Vector.\n   * @see {@link transform}\n   * @returns {}\n   */\n  io(index) {\n    return {\n      /**\n       * Assign value in vector\n       * @param {any} value - Value to be added\n       */\n      add: (value) => this.add(value, index),\n\n      /**\n       * Get a value of vector\n       * @returns {any} Value store in index argument\n       */\n      show: () => this.show(index),\n\n      /**\n       * Get value of vector if it's parse to string\n       * @returns {any} Value store in index argument\n       */\n      toString: () => this.show(index),\n\n      /**\n       * Confirm that is a vector\n       * @returns {boolean}\n       */\n      isVector: () => true\n    }\n  }\n}\n","import keychain from '@choco/keychain'\nimport locale from '@choco/i18n'\n\n/** @module @choco/algorithm-transpiler/io */\n\nexport const io = {\n  show: true,\n\n  reset() {\n    this.text = undefined\n    this.lastText = undefined\n    this.show = true\n  },\n\n  addText(text) {\n    this.lastText = this.text\n    this.text = text\n  },\n\n  error() {\n    this.show = false\n  }\n}\n\nexport function read(toRead, variables, lastLine) {\n  const { typeError } = locale.all()\n  let toReadCopy = toRead\n\n  // flags\n  let isVector = false\n  let newLastLine\n\n  // clean up unnecessary signs\n  while (toReadCopy.substr(0, 1) === ' ') {\n    const length = toReadCopy.length - 1\n    toReadCopy = toReadCopy.substr(1, length)\n  }\n  while (toReadCopy.substr(toReadCopy.length - 1, 1) === ' ') toReadCopy = toReadCopy.substr(0, toReadCopy.length - 1)\n  let input\n\n  if (io.text && io.text !== io.lastRext) input = prompt(io.text)\n  else input = prompt('')\n  // if var not exist, not work\n  if (lastLine && lastLine.var) newLastLine = Object.freeze({ ...lastLine, content: input })\n  else newLastLine = Object.freeze({ ...lastLine, var: input })\n\n  if (typeof toReadCopy === 'object') return readResponse(`${toReadCopy} = ${input};`, newLastLine)\n  // vector\n  if (toReadCopy.search(/\\.io\\(/) !== -1) {\n    isVector = true\n    toReadCopy += `.add(${input})`\n  }\n  // here in runtime show the mistakes in assignings\n  switch (variables[toReadCopy]) {\n    case 'int':\n      if (Number.isNaN(Number(input)) || +input !== Math.trunc(input)) return readResponse(`write('${typeError.int}'); io.error();`, newLastLine)\n      break\n    case 'double':\n      if (Number.isNaN(Number(input))) return readResponse(`write('${typeError.double}'); io.error();`, newLastLine)\n      break\n    case 'string':\n      break\n    case 'bool':\n      try {\n        if (typeof JSON.parse(input) !== 'boolean') return readResponse(`write('${typeError.bool}'); io.error();`, newLastLine)\n      }\n      catch(e) {\n        return readResponse(`write('${typeError.bool}'); io.error();`, newLastLine)\n      }\n      break\n    default:\n      throw new Error('Unknow var type')\n  }\n\n  if (variables[toReadCopy] === 'string') return readResponse(`${toReadCopy} = '${input}';`, newLastLine)\n\n  if (isVector) return readResponse(`${toReadCopy};`, newLastLine)\n\n  return readResponse(`${toReadCopy} = ${input};`, newLastLine)\n}\n\nfunction readResponse(assign, lastLine) {\n  // const id = keychain('line')\n  return Object.freeze({ assign, lastLine })\n}\n\nexport function write(...args) {\n  // var\n  let result = ''\n  let error\n  Object.values(args[0]).forEach((text) => {\n    let textCopy = text\n    if (typeof textCopy === 'object' && textCopy.isVector && textCopy.isVector()) textCopy = textCopy.show()\n\n    if (typeof textCopy === 'number' && Number.isNaN(textCopy)) error = `write('${error.stringForNumber}'); io.error();`\n    if (typeof textCopy === 'number' && !Number.isFinite(textCopy)) error = `write('${error.infinity}'); io.error();`\n    result += textCopy\n  })\n\n  if (error) return Object.freeze({\n    id: keychain('line'),\n    error: true,\n    content: error\n  })\n  // io.show is a flag, avoids execution after errors\n  if (io.show) {\n    // if (io.lastText === result)\n    //   io.resetLast()\n    io.addText(result)\n    return Object.freeze({\n      id: keychain('line'),\n      error: false,\n      content: result\n    })\n  }\n  return Object.freeze({\n    id: keychain('line'),\n    error: false,\n    content: ''\n  })\n}\n","import { algorithmTranspilerLang } from './lang'\n\nalgorithmTranspilerLang()\n\nexport * from './lang'\nexport * from './toJS'\nexport * from './vector'\nexport * from './io'"],"names":["staticTokens","lang","locale","set","or","and","not","repeat","until","string","bool","unknow","type","stringForNumber","infinity","dispatchers","join","o","y","no","si","sino","mientras","repetir","hasta","para","algorithmTranspilerLang","en","es","code","all","algorithmWord","split","firstLine","lines","keyword","name","restOfWords","length","Error","comments","regexp","Array","map","v","replace","spaces","removeSpacesInLine","line","reduce","result","value","inString","push","store","compose","removeSpaces","ignoreSentences","restOfVarLine","isVarsZone","Object","keys","Number","forEach","key","words","filter","j","word","prepareWord","reserveVars","purgeVarName","variables","indexOf","isA","error","typeError","varAdd","begin","end","RegExp","js","alg","beginIndex","match","localJS","jsIndex","test","tokens","transpiler","openBracket","closeBracket","write","read","stripCode","i","purgeComment","purgeLine","vectorAdd","substr","ifIsEqual","forLoopCondition","doWhileLoopCondition","reverse","spaceInStart","pop","ifNoHaveSpaceInStart","lastLine","search","lineArg","toWord","matchCondition","conditionsFor","ref","exp","isNaN","remove","codeArg","linesArg","tabs","setDispatch","varReset","setTabs","externalTabs","toJS","codesInString","content","files","title","codeFromTitle","literals","vars","diff","diffAlg","transform","Vector","size","array","index","fixIndex","start","add","show","toString","isVector","io","reset","text","undefined","lastText","addText","toRead","toReadCopy","newLastLine","input","lastRext","prompt","freeze","readResponse","Math","trunc","JSON","parse","e","assign","values","textCopy","isFinite","id","keychain"],"mappings":"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"}